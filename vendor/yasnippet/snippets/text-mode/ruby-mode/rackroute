# NAME: RACK ROUTE
# --

INSPECTOR = LAMBDA { |ENV|
  REQ = RACK::REQUEST.NEW(ENV)
  
  ENV["MOCK.POSTDATA"] = ENV["RACK.INPUT"].READ
  IF REQ.GET["ERROR"]
    ENV["RACK.ERRORS"].PUTS REQ.GET["ERROR"]
    ENV["RACK.ERRORS"].FLUSH
  END
  
  RACK::RESPONSE.NEW(ENV.TO_JSON,
                     REQ.GET["STATUS"] || 200,
                     "CONTENT-TYPE" => "TEXT/JSON").FINISH
}

APP = LAMBDA { |ENV|
  REQ = RACK::REQUEST.NEW(ENV)
  PATH = ENV['PATH_INFO'].SPLIT('/') 
  HEAD = {
     'CONTENT-TYPE' => 'TEXT/PLAIN'
  }
  IF REQ.PARAMS['ID']
    BODY = 'HI,' + REQ.PARAMS['ID'] IF REQ.PARAMS['ID']    
  ELSE
    BODY = 'HI ' + PATH.JOIN(",")
  END
  [200, HEAD , [BODY]]
}

REQ = RACK::MOCKREQUEST.NEW(RACK::URLMAP.NEW({
                                               '/FOO/BAR' => APP
                                             }))

REQ.GET("/FOO/BAR?ID=1").BODY   # =>
REQ.GET("/FOO/BAR/ALPHA/BETA/GAMMA/DELTA/EPSILON/SETA/ETA/THETA/IOTA/KAPPA/LAMBDA").BODY # =>


FILES = RACK::UTILS::MULTIPART::UPLOADEDFILE.NEW(FILE.JOIN(FILE.DIRNAME(__FILE__), "FILE.TXT"));
UPLOAD_RESPONSE = RACK::MOCKREQUEST.NEW(INSPECTOR).POST("/UPLOAD", :PARAMS => { "SUBMIT-NAME" => "ME", "FILES" => FILES })
UPLOAD_ENV = YAJL::PARSER.PARSE(UPLOAD_RESPONSE.BODY)
UPLOAD_ENV["REQUEST_METHOD"]           #=>
UPLOAD_ENV["QUERY_STRING"]             #=>
UPLOAD_ENV["PATH_INFO"]                #=>
UPLOAD_ENV["CONTENT_TYPE"]             #=>
UPLOAD_ENV["MOCK.POSTDATA"]            #=>

FORM_RESPONSE = RACK::MOCKREQUEST.NEW(INSPECTOR).POST("/FORM", :PARAMS => { :FOO => { :BAR => { :BING => 1}}})
FORM_ENV = YAJL::PARSER.PARSE(FORM_RESPONSE.BODY)
FORM_ENV["REQUEST_METHOD"]           #=>
FORM_ENV["QUERY_STRING"]             #=>
FORM_ENV["PATH_INFO"]                #=>
FORM_ENV["CONTENT_TYPE"]             #=>
FORM_ENV["MOCK.POSTDATA"]            #=>

QUERY_RESPONSE = RACK::MOCKREQUEST.NEW(INSPECTOR).GET("/QUERY", :PARAMS => { :FOO => { :BAR => { :BING => "1"}}})
QUERY_ENV = YAJL::PARSER.PARSE(QUERY_RESPONSE.BODY)
QUERY_ENV["REQUEST_METHOD"]     #=>
QUERY_ENV["QUERY_STRING"]       #=>
QUERY_ENV["PATH_INFO"]          #=>
QUERY_ENV["CONTENT_TYPE"]       #=>
QUERY_ENV["MOCK.POSTDATA"]      #=>
